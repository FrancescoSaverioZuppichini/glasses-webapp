{"version":3,"sources":["theme.js","codeStrings.js","App.js","serviceWorker.js","index.js","github.svg"],"names":["theme","colors","text","textLight","background","primary","primaryLight","dark","gray","warning","warningActive","active","cardBg","fonts","body","heading","monospace","breakpoints","fontWeights","thin","bold","lineHeights","fontSizes","app","margin","minWidth","color","spacer","flex","links","textDecoration","opacity","container","padding","cards","code","boxShadow","borderRadius","buttons","fontSize","paddingX","paddingY","outline","centering","flexDirection","justifyContent","alignItems","vCentering","display","width","section","templates","model","descriptions","models","href","sections","NavBar","sx","map","variant","key","mx","flexGrow","height","src","github","alt","Typing","children","speed","onFinish","useState","currentText","setCodeString","lastIndex","setLastIndex","useEffect","timer","setTimeout","c","length","clearTimeout","Code","minHeight","newLastIndex","language","style","atomOneLight","Actions","toLink","window","location","flexWrap","m","onClick","ShowCaseSection","backgroundColor","charAt","toUpperCase","slice","mb","p","maxWidth","wrapLines","Header","fontWeight","role","aria-label","source","mt","my","Footer","App","py","px","i","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.ac5c6940.chunk.js","sourcesContent":["const theme = {\n  colors: {\n    text: '#000',\n    textLight: 'white',\n    background: '#F4F4F4',\n    primary: '#6A66F2',\n    primaryLight: 'A29FFF',\n    dark: '#413BFF',\n    gray: 'C4C4C4',\n    warning: '#F26666',\n    warningActive: '#FF6099',\n    active: '#9B66F2',\n    cardBg: 'white'\n  },\n  fonts: {\n    body: \"'Roboto', sans-serif\",\n    heading: \"'Roboto', sans-serif\",\n    monospace: 'Menlo, monospace',\n  },\n  breakpoints: [\n    '40em', '56em', '64em', '100em',\n  ],\n  fontWeights: {\n    thin: 200,\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n  fontSizes: [\n    14, 16, 20, 24, 28, 48, 64,\n  ],\n  app: {\n    margin: 0,\n    minWidth: '100vw',\n    // minHeight: '100vh',\n    background: 'linear-gradient(270deg, #AA47BA 0%, #4D5098 100%)',\n    color: 'white'\n  },\n  spacer: {\n    flex: '1 1'\n  },\n  links: {\n    primary: {\n      color: 'inherit',\n      textDecoration: 'none',\n      '&:active': {\n        opacity: 0.5,\n      },\n      '&:hover': {\n        opacity: 0.5,\n      }\n    }\n  },\n  container: {\n    padding: [3, 4]\n  },\n  cards: {\n    code: {\n      background: 'rgb(250, 250, 250)',\n      boxShadow: '8px 8px 16px 8px rgba(0, 0, 0, 0.25)',\n      borderRadius: '36px',\n      padding: 3,\n      color: 'black'\n    }\n  },\n  buttons: {\n    primary: {\n      background: '#8F61CA',\n      boxShadow: '8px 8px 16px rgba(0, 0, 0, 0.25)',\n      borderRadius: '32px',\n      fontSize: 3,\n      paddingX: 4,\n      paddingY: 3,\n      outline: 'none',\n      '&:active': {\n        boxShadow: '2px 2px 16px rgba(0, 0, 0, 0.25)',\n        // outline:'none'\n      },\n      '&:hover': {\n        boxShadow: '2px 2px 16px rgba(0, 0, 0, 0.25)',\n        // outline:'none'\n      }\n    },\n    text : {\n      background: 'rgba(143, 97, 202, 0.2)',\n      boxShadow: '8px 8px 16px rgba(0, 0, 0, 0.25)',\n      borderRadius: '32px',\n      fontSize: 2,\n      paddingX: 4,\n      paddingY: 3,\n      outline: 'none',\n      '&:active': {\n        boxShadow: '2px 2px 16px rgba(0, 0, 0, 0.25)',\n        // outline:'none'\n      },\n      '&:hover': {\n        boxShadow: '2px 2px 16px rgba(0, 0, 0, 0.25)',\n        // outline:'none'\n      }\n    }\n\n   \n  },\n  centering: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n  },\n  vCentering: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    display: 'flex',\n    width: '100%'\n\n\n  },\n  section: {\n    paddingX: [2, 3, 5],\n    paddingY: [4, 5, 5]\n\n  }\n}\n\nexport default theme","const templates = {\n    'classification': (model) =>\n        `from glasses import AutoModel\n# create a model\nmodel = AutoModel('${model}')\n# change activation\nmodel = AutoModel('${model}', activation = nn.SELU)\n# change number of classes (default is 1000 )\nmodel = AutoModel('${model}', n_classes=100)\n# change the initial convolution\n# freeze only the convolution weights\nmodel = AutoModel('${model}')\nmodel.freeze(who=model.encoder)\n# to extract the inner features, \n# first notify the model we want them\nmodel.encoder.features\nmodel(torch.rand((1,3,224,224)))\n# get the features :)\nfeatures = model.encoder.features\n#torch.Size([1, 64, 112, 112])\n#torch.Size([1, 64, 56, 56])\n#torch.Size([1, 128, 28, 28])\n#torch.Size([1, 256, 14, 14])\n`\n,\n'segmentation': (model) => \n`from functools import partial\nfrom glasses.nn.models.segmentation.unet import UNet, UNetDecoder\n# vanilla Unet\nunet = UNet()\n# let's change the encoder\nunet = UNet.from_encoder(partial(AutoModel.from_name, '${model}'))\n# mmm I want more layers in the decoder!\nunet = UNet(decoder=partial(UNetDecoder, widths=[256, 128, 64, 32, 16]))\n# maybe resnet was better\nunet = UNet(encoder=lambda **kwargs: ResNet.resnet26(**kwargs).encoder)\n# same API\nunet.summary(input_shape=(1,224,224))`,\n\n'interpretability': (model) => \n\n`import requests\nfrom PIL import Image\nfrom io import BytesIO\nfrom glasses.interpretability import GradCam, SaliencyMap\nfrom torchvision.transforms import Normalize\nr = requests.get('https://i.insider.com/5df126b679d7570ad2044f3e?width=700&format=jpeg&auto=webp')\nim = Image.open(BytesIO(r.content))\n# un normalize when done\npostprocessing = Normalize(-cfg.mean / cfg.std, (1.0 / cfg.std))\n# apply preprocessing\nx =  cfg.transform(im).unsqueeze(0)\nmodel = AutoModel('${model}'\n_ = model.interpret(x, using=GradCam(), postprocessing=postprocessing).show()\n`,\n\n'customization': (model) => \n`from glasses import AutoModel\nfrom glasses.nn.att import SpatialSE\nfrom  glasses.nn.models.classification.resnet import ResNetBottleneckBlock\n# load a model and change the inner block\nmodel = model = AutoModel('${model}', block=WideResNetBottleNeckBlock)\n# create a custom block and pass it to the model\n# create a squeeze and excitation bottleneck block!\nclass SEResNetBottleneckBlock(ResNetBottleneckBlock):\n    def __init__(self, in_features: int, out_features: int, squeeze: int = 16, *args, **kwargs):\n        super().__init__(in_features, out_features, *args, **kwargs)\n        # all the weights are in block, we want to apply se after the weights\n        self.block.add_module('se', SpatialSE(out_features, reduction=squeeze))\n# let's pass it to the model\nmodel = model = AutoModel('${model}', block=SEResNetBottleneckBlock)\n\n`\n}\n\nconst descriptions = {\n    'classification' : 'Glasses supports all the major SOTA models and allows to quickly change activation, classes and to store the inter-layer features.',\n    'segmentation': 'Glasses supports various segmentation models and it is easy to change between different decoders architectures.',\n    'interpretability': 'Glases models have interpretability build-in!',\n    'customization': 'Glasses models have the same structure, making it easy to swap inner blocks'\n}\n\nconst models = ['resnet34', 'se_resnet34', 'resnext50_32x4d', 'densenet121', 'vgg16',\n'efficientnet_b1', 'efficientnet_lite0']\n\nexport { templates, models, descriptions }","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { ThemeProvider } from 'theme-ui'\nimport theme from './theme.js'\nimport { Box, Card, Text, Link, Flex, Button } from 'theme-ui'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { atomOneLight } from 'react-syntax-highlighter/dist/esm/styles/hljs'\nimport { templates, models, descriptions } from './codeStrings'\nimport ReactMarkdown from 'react-markdown'\nimport github from './github.svg'\n// import axios from 'axios'\n\nconst links = [{\n  text: 'Glasses',\n  href: '#'\n},\n{\n  text: 'Doc',\n  href: 'https://francescosaveriozuppichini.github.io/glasses/'\n},\n{\n  text: 'Examples',\n  href: 'https://francescosaveriozuppichini.github.io/glasses/tutorials/README.html#getting-started'\n},\n{\n  text: 'Models',\n  href: 'https://francescosaveriozuppichini.github.io/glasses/glasses.nn.models.html'\n}\n\n]\n\nconst sections = ['classification', 'segmentation', 'interpretability', 'customization']\n\nconst NavBar = ({ links }) => (\n  <Flex sx={{ width: '100%' }}>\n    {links.map(({ text, href }) =>\n      (\n        <Link href={href} variant='primary' key={href}>\n          <Text mx={3} sx={{ fontSize: 3 }}>{text}</Text>\n        </Link>\n      ))}\n    <Box sx={{ flexGrow: 1 }}>\n\n    </Box>\n    <Link href='https://github.com/FrancescoSaverioZuppichini/glasses'>\n      <img height='28px' src={github} alt='git'></img>\n    </Link>\n  </Flex>\n)\n\nconst Typing = ({ text, children, speed = 15, onFinish }) => {\n  const [currentText, setCodeString] = useState('')\n  const [lastIndex, setLastIndex] = useState(0)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const c = text[lastIndex]\n      if ((lastIndex + 1) % text.length) {\n        setCodeString(lastIndex > 0 ? currentText + c : c)\n        setLastIndex((lastIndex + 1) % text.length)\n      } else {\n        if (onFinish) {\n          onFinish()\n          setLastIndex(0)\n        }\n      }\n    }, speed)\n    return () => clearTimeout(timer);\n  })\n\n  return (\n    <div>\n      {children(currentText)}\n    </div>\n  )\n}\n\n\nconst Code = () => {\n  const [lastIndex, setLastIndex] = useState(0)\n\n  const code = templates['classification'](models[lastIndex])\n\n  const onTypingFinish = () => {\n    const newLastIndex = lastIndex + 1 < code.length ? lastIndex + 1 : 0\n    setLastIndex(newLastIndex)\n  }\n\n  return (\n    <Card variant='code' sx={{ minHeight: '400px' }}>\n      <Typing text={code} onFinish={onTypingFinish}>\n        {currentText => (\n          <SyntaxHighlighter language=\"python\" style={atomOneLight} >\n            {currentText}\n          </SyntaxHighlighter>\n        )}\n      </Typing>\n    </Card>\n\n  )\n}\n\n\n\nconst Actions = () => {\n  const toLink = (href) => window.location = href\n\n  return (\n    <Flex sx={{ flexWrap: 'wrap' }}>\n      <Button m={2} onClick={() => toLink('https://francescosaveriozuppichini.github.io/glasses/')}>Doc</Button>\n      <Button m={2} onClick={() => toLink('https://francescosaveriozuppichini.github.io/glasses/tutorials/README.html#getting-started')}>Examples</Button>\n      <Button m={2} onClick={() => toLink('https://francescosaveriozuppichini.github.io/glasses/glasses.nn.models.html')}>Models</Button>\n    </Flex>\n  )\n}\n\nconst ShowCaseSection = ({ section, model = 'resnet34', backgroundColor = 'background' }) =>\n  <Box variant='section' sx={{ backgroundColor: backgroundColor }}>\n    <Text sx={{ fontSize: 4 }}>{section.charAt(0).toUpperCase() + section.slice(1)}\n    </Text>\n    <Box mb={2} />\n    <Flex sx={{ flexDirection: ['column', 'column', 'column', 'row'], alignItems: 'center' }}>\n      <Box sx={{ flex: 1 }}>\n        <Text sx={{ fontSize: 2 }}>\n          {descriptions[section]}\n        </Text>\n      </Box>\n      <Box p={3}></Box>\n      <Box sx={{ flex: 1, maxWidth: '99%' }}>\n        <Card>\n          <SyntaxHighlighter language=\"python\" style={atomOneLight} wrapLines={true}>\n            {templates[section](model)}\n          </SyntaxHighlighter>\n        </Card>\n      </Box>\n\n    </Flex>\n  </Box>\n\n\n\n\nconst Header = () => (\n  <Box sx={{ flex: 2 }}>\n    <Flex sx={{ flexDirection: 'column' }}>\n      <Text sx={{ fontSize: 6, fontWeight: 'bold' }} >Glasses\n                  <span role='img' aria-label=\"glasses\">😎</span>\n      </Text>\n      <ReactMarkdown source={'[![codecov](https://codecov.io/gh/FrancescoSaverioZuppichini/glasses/branch/develop/graph/badge.svg)](https://codecov.io/gh/FrancescoSaverioZuppichini/glasses)'} />\n      <Text mt={2} sx={{ fontSize: 4, maxWidth: '800px' }} >Compact, concise and customizable\n             deep learning <strong>computer vision</strong> library\nbuilt on top of <strong>PyTorch</strong></Text>\n      <Box my={4} />\n      <Actions />\n      <Box my={2} />\n    </Flex>\n  </Box>\n)\n\nconst Footer = () => (\n  <Flex>\n    <Text>Made with <span role='img' aria-label=\"love\">❤️</span> by\n    <Link href='https://www.linkedin.com/in/francesco-saverio-zuppichini-94659a150/' variant='primary'> Francesco Saverio Zuppichini</Link> and\n    <Link href='https://www.linkedin.com/in/francescocicala/' variant='primary'> Francesco Cicala</Link>\n    </Text>\n\n  </Flex >\n\n)\n\n// const Table = () => {\n//   const [table, setTable] = useState('')\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const { data } = await axios.get('https://raw.githubusercontent.com/FrancescoSaverioZuppichini/glasses/develop/table.md')\n//       setTable(data)\n\n//     }\n//     fetchData()\n//   }, [])\n\n//   return <ReactMarkdown source={table}></ReactMarkdown>\n// }\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Flex variant='app'>\n        <Flex variant='container' sx={{ flexDirection: 'column', width: '100%' }}>\n          <Box sx={{ flex: 0 }}>\n            <NavBar links={links} />\n          </Box>\n          <Flex sx={{ flexDirection: 'column' }}>\n            <Box py={[3, 4, 6]} />\n            <Flex sx={{ flexDirection: ['column', 'column', 'column', 'row'] }} px={[2, 3, 4]}>\n              <Header />\n              <Box sx={{ flex: 1, maxWidth: ['92vw'], minWidth: [0, '600px'] }}>\n                <Code />\n              </Box>\n            </Flex>\n          </Flex>\n          <Box mt={3} />\n          <Box sx={{ flexGrow: 1 }} />\n          <Box py={[3, 4, 6]} />\n        </Flex>\n      </Flex>\n      {sections.map((section, i) => {\n        const backgroundColor = i % 2 ? 'background' : 'white'\n        return (<ShowCaseSection section={section} model='resnet34' backgroundColor={backgroundColor} key={section} />)\n      })}\n      {/* <Box variant='section'>\n        <Text sx={{ fontSize: 4 }}>Models\n            </Text>\n        <Box p={2}></Box>\n        <Card variant='code' sx={{overflowX: 'scroll'}}>\n          <Table />\n        </Card>\n\n      </Box> */}\n      <Box p={4}><Footer /></Box>\n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/github.f0aed993.svg\";"],"sourceRoot":""}